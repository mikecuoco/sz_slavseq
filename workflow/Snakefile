import pandas as pd
from pathlib import Path
from snakemake.utils import validate, min_version, Paramspace


##### set minimum snakemake version #####
min_version("7.22.0")


configfile: "config/config.yml"


validate(config, schema="schemas/config.schema.yaml")

# read sample sheets
samples = pd.read_csv(
    config["samples"],
    sep="\t",
    dtype={"sample_id": str, "tissue_id": str, "donor_id": str},
)
validate(samples, schema="schemas/samples.schema.yaml")
donors = pd.read_csv(config["donors"], sep="\t", dtype={"donor_id": str})
validate(donors, schema="schemas/donors.schema.yaml")

# merge sample sheets
samples = samples.merge(donors, on=["donor_id"]).set_index(
    ["donor_id", "sample_id"], drop=False
)

# create donor sheet
donors = donors.set_index("donor_id", drop=False)

# setup parameters for regions
regions_params = []
# for size in [200]:
#     for bgtest in [False]:
#         for bgsize in [500, 1000, 5000, 10000]:
#             regions_params.append(
#                 {
#                     "mode": "peaks",
#                     "size": size,
#                     "step": 1,
#                     "minreads": 5,
#                     "bgtest": bgtest,
#                 }
#             )
#             if bgtest:
#                 regions_params[-1]["bgsize"] = bgsize


regions_params.append(
    {
        "mode": "peaks",
        "size": 200,
        "step": 1,
        "minreads": 10,
        "bgtest": False,
        "bgsize": "NA",
    }
)
regions_params.append(
    {
        "mode": "peaks",
        "size": 200,
        "step": 1,
        "minreads": 5,
        "bgtest": False,
        "bgsize": "NA",
    }
)
# regions_params.append(
#     {
#         "mode": "windows",
#         "size": 300,
#         "step": 100,
#         "minreads": 5,
#         "bgtest": False,
#         "bgsize": "NA",
#     }
# )
regions_params = Paramspace(pd.DataFrame(regions_params))


wildcard_constraints:
    donor="|".join(donors["donor_id"]),
    sample="|".join(samples["sample_id"]),
    genome=config["genome"]["name"],
    outdir=config["outdir"],
    params="|".join(regions_params.instance_patterns),


include: "rules/ref.smk"
include: "rules/download.smk"
include: "rules/trim.smk"
include: "rules/align.smk"
include: "rules/model.smk"


rule all:
    input:
        expand(
            rules.tune.output,
            genome=config["genome"]["name"],
            params=regions_params.instance_patterns,
            outdir=config["outdir"],
        ),
