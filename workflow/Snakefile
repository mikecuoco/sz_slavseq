import pandas as pd
from pathlib import Path
import os
from collections import defaultdict
from snakemake.utils import validate, min_version, Paramspace


##### set minimum snakemake version #####
min_version("7.22.0")


configfile: "config/config.yml"


validate(config, schema="schemas/config.schema.yaml")

# read sample sheets
samples = pd.read_csv(
    config["samples"],
    sep="\t",
    dtype={"sample_id": str, "tissue_id": str, "donor_id": str},
)
validate(samples, schema="schemas/samples.schema.yaml")
donors = pd.read_csv(config["donors"], sep="\t", dtype={"donor_id": str})
validate(donors, schema="schemas/donors.schema.yaml")

# merge sample sheets
samples = samples.merge(donors, on=["donor_id"]).set_index(["donor_id"], drop=False)

with open("resources/bad_cells.txt", "r") as f:
    bad_cells = [line.strip() for line in f.readlines()]

samples = samples[~samples["sample_id"].isin(bad_cells)]
cells = samples[
    ~samples["sample_id"].str.contains("gDNA")
]  # single-cells only, exclude bulk samples
bulk = samples[
    samples["sample_id"].str.contains("gDNA")
]  # bulk samples only, exclude single-cells

# create donor sheet
donors = donors.set_index("donor_id", drop=False)


wildcard_constraints:
    donor="|".join(donors["donor_id"]),
    sample="|".join(samples["sample_id"]),
    genome=config["genome"]["name"],
    outdir=config["outdir"],


include: "rules/ref.smk"
include: "rules/download.smk"
include: "rules/trim.smk"
include: "rules/align.smk"
include: "rules/model.smk"


rule all:
    input:
        expand(
            rules.igv_snapshots.output,
            genome=config["genome"]["name"],
            outdir=config["outdir"],
            donor=donors["donor_id"].unique(),
        ),
