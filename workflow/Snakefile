import pandas as pd
from pathlib import Path
from collections import defaultdict
from snakemake.utils import validate, min_version, Paramspace


##### set minimum snakemake version #####
min_version("7.22.0")


configfile: "config/config.yml"


validate(config, schema="schemas/config.schema.yaml")

# read sample sheets
samples = pd.read_csv(
    config["samples"],
    sep="\t",
    dtype={"sample_id": str, "tissue_id": str, "donor_id": str},
)
validate(samples, schema="schemas/samples.schema.yaml")
donors = pd.read_csv(config["donors"], sep="\t", dtype={"donor_id": str})
validate(donors, schema="schemas/donors.schema.yaml")

# merge sample sheets
samples = samples.merge(donors, on=["donor_id"]).set_index(
    ["donor_id", "sample_id"], drop=False
)

# create donor sheet
donors = donors.set_index("donor_id", drop=False)

# setup parameters for regions
regions_params = []
for bgtest in [False, True]:
    for bgsize in [1000, 2500, 5000, 10000, 20000]:
        for mfold in [3, 4]:
            for greedy in [False, True]:
                regions_params.append(
                    {
                        "mode": "peaks",
                        "size": 200,
                        "step": 1,
                        "bgtest": bgtest,
                    }
                )
                if bgtest:
                    regions_params[-1]["bgsize"] = bgsize
                    regions_params[-1]["mfold"] = mfold
                else:
                    regions_params[-1]["greedy"] = greedy

# regions_params = [
#     {
#         "mode": "peaks",
#         "size": 200,
#         "step": 1,
#         "bgtest": False,
#     }
# ]
regions_params = Paramspace(pd.DataFrame(regions_params).drop_duplicates())


wildcard_constraints:
    donor="|".join(donors["donor_id"]),
    sample="|".join(samples["sample_id"]),
    genome=config["genome"]["name"],
    outdir=config["outdir"],
    params="|".join(regions_params.instance_patterns),


include: "rules/ref.smk"
include: "rules/download.smk"
include: "rules/trim.smk"
include: "rules/align.smk"
include: "rules/model.smk"


rule all:
    input:
        expand(
            rules.tune.output,
            genome=config["genome"]["name"],
            params=regions_params.instance_patterns,
            outdir=config["outdir"],
        ),
        expand(
            rules.profile_regions.output,
            outdir=config["outdir"],
            genome=config["genome"]["name"],
            donor=samples["donor_id"].values[0],
            sample=samples["sample_id"].values[0],
        ),
        expand(
            expand(
                rules.flagstat.output,
                zip,
                donor=samples["donor_id"],
                sample=samples["sample_id"],
                allow_missing=True,
            ),
            outdir=config["outdir"],
            genome=config["genome"]["name"],
        ),
        expand(
            expand(
                rules.igv_report.output,
                zip,
                donor=samples["donor_id"],
                sample=samples["sample_id"],
                allow_missing=True,
            ),
            outdir=config["outdir"],
            params=regions_params.instance_patterns,
            genome=config["genome"]["name"],
        ),
