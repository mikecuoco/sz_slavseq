import pandas as pd
from pathlib import Path
from snakemake.utils import validate, min_version, Paramspace


##### set minimum snakemake version #####
min_version("7.22.0")


configfile: "config/config.yml"


validate(config, schema="schemas/config.schema.yaml")

# read sample sheets
samples = pd.read_csv(
    config["samples"],
    sep="\t",
    dtype={"sample_id": str, "tissue_id": str, "donor_id": str},
)
validate(samples, schema="schemas/samples.schema.yaml")
donors = pd.read_csv(config["donors"], sep="\t", dtype={"donor_id": str})
validate(donors, schema="schemas/donors.schema.yaml")

# merge sample sheets
samples = samples.merge(donors, on=["donor_id"]).set_index(
    ["donor_id", "sample_id"], drop=False
)

# create donor sheet
donors = donors.set_index("donor_id", drop=False)


wildcard_constraints:
    donor="|".join(donors["donor_id"]),
    sample="|".join(samples["sample_id"]),
    genome=config["genome"]["name"],
    outdir=config["outdir"],


include: "rules/ref.smk"
include: "rules/download.smk"
include: "rules/trim.smk"
include: "rules/align.smk"


# setup parameters for regions
regions_params = [
    {
        "region": "windows",
        "reads": "read1",
        "step": 250,
        "size": 750,
    },
    {
        "region": "peaks",
        "reads": "read1",
        "step": 1,
        "size": 400,
    },
    {
        "region": "peaks",
        "step": 1,
        "reads": "read1",
        "size": 300,
    },
    {
        "region": "peaks",
        "reads": "read1",
        "step": 1,
        "size": 200,
    },
]

regions_params = Paramspace(pd.DataFrame(regions_params))


include: "rules/model.smk"


rule all:
    input:
        expand(
            rules.label_donor_regions.output,
            donor=donors["donor_id"].unique(),
            genome=config["genome"]["name"],
            params=regions_params.instance_patterns,
            outdir=config["outdir"],
        ),
        # expand(
        #     expand(
        #         rules.flagstat.output,
        #         stage=["tagged.sorted"],
        #         outdir=config["outdir"],
        #         allow_missing=True,
        #         genome=config["genome"]["name"],
        #     ),
        #     zip,
        #     sample=samples["sample_id"],
        #     donor=samples["donor_id"],
        # ),
        # expand(
        #     expand(
        #         rules.l1_coverage.output.r1,
        #         anno=[
        #             "rmsk_1kb_3end",
        #             "xtea_1kb_3end",
        #         ],
        #         allow_missing=True,
        #         outdir=config["outdir"],
        #         genome=config["genome"]["name"],
        #     ),
        #     zip,
        #     sample=samples["sample_id"],
        #     donor=samples["donor_id"],
        # ),
