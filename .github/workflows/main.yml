name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          
  Testing: 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        genome: ["hs37d5", "hs38DH", "chm13v2"]
    needs:
      - Formatting
    steps: 
    - uses: actions/checkout@v3
      with:
        lfs: true
    - name: Snakemake cache
      id: cache-sm
      uses: actions/cache@v3
      with:
        path: snakemake_cache
        key: ${{ runner.os }}-sm
    - name: Run workflow
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .
        stagein: |
          mamba install -n snakemake -c conda-forge biopython -y -q
          mkdir -p snakemake_cache
          export SNAKEMAKE_OUTPUT_CACHE=snakemake_cache
        snakefile: workflow/Snakefile
        args: "all --use-conda --cache --show-failed-logs --cores 2 --conda-cleanup-pkgs cache --all-temp --configfile .test/chr22/${{ matrix.genome }}.yml"

    # - name: Test report
    #   uses: snakemake/snakemake-github-action@v1.24.0
    #   with:
    #     directory: .test
    #     snakefile: workflow/Snakefile
    #     args: "--report report.zip"