name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SNAKEMAKE_OUTPUT_CACHE: snakemake_cache

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          
  Testing: 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        genome: ["hs37d5", "hs38DH", "chm13v2"]
    needs:
      - Formatting
    steps: 
    - uses: actions/checkout@v3
      with:
        lfs: true
    - name: Snakemake cache
      id: cache-sm
      uses: actions/cache@v3
      with:
        path: ${{ env.SNAKEMAKE_OUTPUT_CACHE }}
        key: ${{ runner.os }}-${{ matrix.genome }}-sm
    - name: Install Snakemake via Micromamba
      uses: mamba-org/provision-with-micromamba@v14
      with:
        environment-file: false
        environment-name: snakemake
        extra-specs: |
          python=3.9
          snakemake==7.16.0
          pandas
          biopython
        channels: conda-forge,bioconda,nodefaults
    - name: Run workflow
      run: |
        source activate snakemake
        mkdir -p ${{ env.SNAKEMAKE_OUTPUT_CACHE }}
        export SNAKEMAKE_OUTPUT_CACHE=${{ env.SNAKEMAKE_OUTPUT_CACHE }}
        snakemake all --use-conda --cache --show-failed-logs --cores 2 --conda-cleanup-pkgs cache --all-temp --configfile .test/chr22/${{ matrix.genome }}.yml

    # - name: Test report
    #   uses: snakemake/snakemake-github-action@v1.24.0
    #   with:
    #     directory: .test
    #     snakefile: workflow/Snakefile
    #     args: "--report report.zip"