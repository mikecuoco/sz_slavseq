name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          
  Testing: 
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        genome: ["hs37d5", "hg38DH", "chm13v2"]
        test: ["preproc", "model"]
    needs:
      - Formatting
    steps: 
    - uses: actions/checkout@v2
      with:
        lfs: true
    - name: Checkout LFS objects
      run: git lfs checkout
    - name: Set conditional test values
      run: |
        if [ ${{ matrix.test }} == "preproc" ]; then

          echo "configfile=.test/chr22/${{ matrix.genome }}.yml" >> $GITHUB_ENV
          echo "target=results/folds/${{ matrix.genome }}/test/mda/Y_test.pickle.gz" >> $GITHUB_ENV

        elif [ ${{ matrix.test }} == "model" ]; then

          # use saved flank_features output to force snakemake to skip alignment
          mkdir -p results/folds/
          cp -r .test/data/${{ matrix.genome }} results/folds/

          echo "configfile=.test/allchrs/${{ matrix.genome }}.yml" >> $GITHUB_ENV
          echo "target=all" >> $GITHUB_ENV

        fi
    - name: Run workflow
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .
        stagein: |
          mamba install -n snakemake -c conda-forge biopython -y -q
        snakefile: workflow/Snakefile
        args: "${{ env.target }} --use-conda --show-failed-logs --cores 2 --conda-cleanup-pkgs cache --all-temp --configfile ${{ env.configfile }}"

    # - name: Test report
    #   uses: snakemake/snakemake-github-action@v1.24.0
    #   with:
    #     directory: .test
    #     snakefile: workflow/Snakefile
    #     args: "--report report.zip"