name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true
          
  Testing: 
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        genome: ["hs37d5","hs38DH","chm13v2"]
        KNRGL: ["eul1db","dbVar"]
    needs:
      - Formatting
    steps: 
    - uses: actions/checkout@v3
      with:
        lfs: true
    - name: Snakemake cache
      id: cache-sm
      uses: actions/cache@v3
      with:
        path: .test/resources/${{ matrix.genome }}
        key: ${{ runner.os }}-${{ matrix.genome }}-${{ matrix.KNRGL }}
    - name: Install mamba
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: true
        python-version: 3.9
        channels: conda-forge,bioconda,nodefaults
        channel-priority: strict
    - name: Install snakemake
      run: mamba install python=3.9 snakemake==7.16 biopython
    - name: Run workflow
      run: |
        snakemake all --use-conda --show-failed-logs --cores 2 --conda-cleanup-pkgs cache --configfile .test/chr21chr22/${{ matrix.genome }}_${{ matrix.KNRGL }}.yml

    # - name: Test report
    #   uses: snakemake/snakemake-github-action@v1.24.0
    #   with:
    #     directory: .test
    #     snakefile: workflow/Snakefile
    #     args: "--report report.zip"